---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: audiobookshelf
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-oci
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      audiobookshelf:
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        containers:
          app:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.19.0@sha256:46f36b2f533e30347ae6d1e35ede6dc805a8d82211e26c4eee1f8f99cc245d48
            env:
              AUDIOBOOKSHELF_UID: 568
              AUDIOBOOKSHELF_GID: 568
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 150Mi
    service:
      app:
        controller: audiobookshelf
        ports:
          http:
            port: *port
    ingress:
      app:
        className: nginx
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: "Audiobooks"
          hajimari.io/icon: mdi:bookshelf
          nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
        hosts:
          - host: &host audiobookshelf.k8sj.io
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        existingClaim: audiobookshelf
      cache:
        type: emptyDir
        globalMounts:
          - path: /.npm
      media:
        type: nfs
        server: nfs.dom.lan
        path: /volume1/BACKUP/gv0/smb/Audiobooki
        globalMounts:
          - path: /media
            readOnly: true
