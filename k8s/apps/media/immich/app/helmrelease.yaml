# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
  namespace: media
spec:
  interval: 1h
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      interval: 1h
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s-oci
  values:
    # For intel iGPU
    defaultPodOptions:
      nodeSelector:
        kubernetes.io/arch: amd64
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
    controllers:
      server:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v2.0.1@sha256:8286638680f0a38a7cb380be64ed77d1d1cfe6d0e0b843f64bff92b24289078d
            env:
              <<: &env-common
                REDIS_HOSTNAME: immich-redis
                DB_HOSTNAME: immich-postgres
                DB_DATABASE_NAME: immich
                DB_USERNAME: immich
                DB_PASSWORD: immich
              IMMICH_WORKERS_INCLUDE: &server-include 'api'
            securityContext: &security
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
      microservices:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v2.0.1@sha256:8286638680f0a38a7cb380be64ed77d1d1cfe6d0e0b843f64bff92b24289078d
            env:
              <<: *env-common
              IMMICH_WORKERS_EXCLUDE: *server-include
            securityContext: *security
            resources:
              requests:
                cpu: 50m
                memory: 950Mi
      machine-learning:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.131.2@sha256:29836cf73146057ac388546021fff3e00c923e22a28587cceb5108a5e537987d
            env:
              <<: *env-common
              MPLCONFIGDIR: /tmp/matplotlib
            securityContext: *security
            resources:
              requests:
                cpu: 70m
                memory: 1860Mi
      redis:
        containers:
          app:
            image:
              repository: registry.hub.docker.com/library/redis
              tag: 8.2-alpine@sha256:1c78f5e7512cc8b22b0edc95c20e7abd9e1fd832e5dfd5c3c6b59ce82fb238d0
            securityContext: *security
            args: [--save, '', --appendonly, 'no']
            resources:
              requests:
                cpu: 10m
                memory: 30Mi
        statefulset:
          podManagementPolicy: Parallel
        type: statefulset
      postgres:
        containers:
          app:
            env:
              POSTGRES_USER: immich
              POSTGRES_PASSWORD: immich
              POSTGRES_DB: immich
              PGDATA: /var/lib/postgresql/data/pgdata
            image:
              repository: registry.hub.docker.com/tensorchord/pgvecto-rs
              tag: pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
            resources:
              requests:
                cpu: 10m
                memory: 450Mi
        statefulset:
          podManagementPolicy: Parallel
          volumeClaimTemplates:
          - accessMode: ReadWriteOnce
            globalMounts:
            - path: /var/lib/postgresql/data
            name: pgdata
            size: 10Gi
        type: statefulset
    persistence:
      upload:
        type: persistentVolumeClaim
        existingClaim: immich-upload
        advancedMounts:
          server:
            app:
            - path: /usr/src/app/upload
          microservices:
            app:
            - path: /usr/src/app/upload
      photos:
        type: persistentVolumeClaim
        existingClaim: immich-storage
        advancedMounts:
          server:
            app:
            - path: /mnt/syno-photos
          microservices:
            app:
            - path: /mnt/syno-photos
      model-cache:
        type: emptyDir
        advancedMounts:
          machine-learning:
            app:
            - path: /cache
      tmp:
        type: emptyDir
    service:
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
      server:
        controller: server
        ports:
          http:
            port: 2283
      postgres:
        controller: postgres
        ports:
          http:
            port: 5432
      redis:
        controller: redis
        ports:
          http:
            port: 6379
    ingress:
      immich:
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:image
        className: nginx
        hosts:
        - host: &host "immich.k8sj.io"
          paths:
          - path: /
            service:
              identifier: server
              port: http
        tls:
          - hosts:
              - *host
