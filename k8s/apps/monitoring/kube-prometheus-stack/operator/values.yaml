---
# Default values
# https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
crds:
  enabled: true
cleanPrometheusOperatorObjectNames: true
alertmanager:
  ingress:
    enabled: true
    annotations:
      hajimari.io/enable: "true"
      nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
      hajimari.io/appName: "Alert Manager"
      hajimari.io/icon: mdi:alert-decagram-outline
    ingressClassName: nginx
    hosts: [&host "alert-manager.k8sj.io"]
    tls:
      - hosts:
        - *host
    pathType: Prefix
  alertmanagerSpec:
    podAntiAffinity: "hard"
    storage:
      volumeClaimTemplate:
        spec:
          resources:
            requests:
              storage: 1Gi
kubeApiServer:
  enabled: true
  serviceMonitor:
    metricRelabelings:
      # Drop high cardinality labels
      - action: drop
        sourceLabels: ["__name__"]
        regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
      - action: drop
        sourceLabels: ["__name__"]
        regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
kubelet:
  enabled: true
  serviceMonitor:
    metricRelabelings:
      # Drop high cardinality labels
      - action: labeldrop
        regex: (uid)
      - action: labeldrop
        regex: (id|name)
      - action: drop
        sourceLabels: ["__name__"]
        regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
kubeScheduler:
  enabled: false
kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: false
kubeProxy:
  enabled: false
prometheus:
  ingress:
    enabled: true
    annotations:
      hajimari.io/enable: "true"
      nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
      hajimari.io/appName: Prometheus
      hajimari.io/icon: simple-icons:prometheus
    ingressClassName: nginx
    hosts: [&host "prometheus.k8sj.io"]
    tls:
      - hosts:
          - *host
    pathType: Prefix
  prometheusSpec:
    scrapeInterval: 1m # Must match interval in Grafana Helm chart
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    scrapeConfigSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    enableAdminAPI: true
    walCompression: true
    enableFeatures:
      - auto-gomemlimit
      - memory-snapshot-on-shutdown
      - new-service-discovery-manager
    retention: 14d
    retentionSize: 70GB
    resources:
      requests:
        cpu: 100m
      limits:
        memory: 1500Mi
    storageSpec:
      volumeClaimTemplate:
        spec:
          resources:
            requests:
              storage: 75Gi
prometheus-node-exporter:
  fullnameOverride: node-exporter
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels: ["__meta_kubernetes_pod_node_name"]
          targetLabel: kubernetes_node
kube-state-metrics:
  fullnameOverride: kube-state-metrics
  metricLabelsAllowlist:
    - pods=[*]
    - deployments=[*]
    - persistentvolumeclaims=[*]
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels: ["__meta_kubernetes_pod_node_name"]
          targetLabel: kubernetes_node
grafana:
  enabled: false
  forceDeployDashboards: true

