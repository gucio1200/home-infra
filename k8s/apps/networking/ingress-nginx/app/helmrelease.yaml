---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: networking
spec:
  interval: 10m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.12.4
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
      interval: 10m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:

      replicaCount: 2

      updateStrategy:
        type: RollingUpdate

      service:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: 172.16.99.102
        externalTrafficPolicy: Local

      publishService:
        enabled: true

      ingressClassResource:
        default: true

      allowSnippetAnnotations: true

      config:
        enable-modsecurity: false
        annotations-risk-level: "Critical"
        enable-owasp-modsecurity-crs: false
#        http-snippet: |-
#          modsecurity_transaction_id "$request_id";
        modsecurity-snippet: |-
          SecRuleEngine Off
          SecRequestBodyAccess On
          SecStatusEngine Off
          SecAuditEngine RelevantOnly
          SecAuditLogRelevantStatus "^(?:5|4(?!04))"
          SecAuditLogParts ABCIJDEFHZ
          SecAuditLog /dev/stderr
          SecAuditLogFormat JSON
          SecRule REMOTE_ADDR "@ipMatch 192.168.0.0/16" "phase:1,id:1,nolog,allow"
          SecRule REMOTE_ADDR "@ipMatch 127.0.0.1" "phase:1,id:2,pass,nolog,ctl:ruleEngine=Off"
        client-body-buffer-size: "100M"
        client-body-timeout: 120
        client-header-timeout: 120
        enable-brotli: "true"
        enable-real-ip: "true"
        forwarded-for-header: "CF-Connecting-IP"
#        forwarded-for-header: proxy_protocol
        hsts-max-age: "31449600"
        keep-alive-requests: 10000
        keep-alive: 120
        log-format-escape-json: "true"
        log-format-upstream: '{"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id",
          "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time, "status": $status, "vhost": "$host", "request_proto": "$server_protocol",
          "path": "$uri", "request_query": "$args", "request_length": $request_length, "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer",
          "http_user_agent": "$http_user_agent" }'
        proxy-body-size: 0
        proxy-buffer-size: 16k
        ssl-protocols: "TLSv1.3 TLSv1.2"
        use-forwarded-headers: "true"

      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: networking
          namespaceSelector:
            any: true

      extraArgs:
#        enable-ssl-passthrough: ""
        default-ssl-certificate: networking/k8sj-io-tls
      terminationGracePeriodSeconds: 120
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
              app.kubernetes.io/component: controller

      podAnnotations:
        configmap.reloader.stakater.com/reload: "cloudflare-proxied-networks"

      resources:
        requests:
          cpu: 10m
          memory: 250Mi
        limits:
          memory: 500Mi

    defaultBackend:
      enabled: false

  valuesFrom:
    # Cloudflare Networks
    # https://www.cloudflare.com/ips/
    - targetPath: controller.config.proxy-real-ip-cidr
      kind: ConfigMap
      name: cloudflare-networks
      valuesKey: cloudflare-networks.txt
